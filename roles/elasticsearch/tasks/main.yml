---
- name: Install prerequisites
  apt:
    name: [openjdk-17-jdk, apt-transport-https, openssl]
    state: present

- name: Add Elastic GPG key
  apt_key:
    url: "https://artifacts.elastic.co/GPG-KEY-elasticsearch"
    state: present

- name: Add repository
  apt_repository:
    repo: "deb https://artifacts.elastic.co/packages/8.x/apt stable main"
    state: present
    filename: elastic-8.x

- name: Install Elasticsearch
  apt:
    name: elasticsearch
    state: present
    update_cache: yes

- name: Create certs directory
  file:
    path: /etc/elasticsearch/certs
    state: directory
    owner: root
    group: elasticsearch
    mode: 0750

- name: Ensure Elasticsearch log directory exists and is writable
  file:
    path: /usr/share/elasticsearch/logs
    state: directory
    owner: elasticsearch
    group: elasticsearch
    mode: 0755

- name: Ensure Elasticsearch data directory exists and is writable
  file:
    path: /var/lib/elasticsearch
    state: directory
    owner: elasticsearch
    group: elasticsearch
    mode: 0755

- name: Stop Elasticsearch if running (to apply config changes)
  systemd:
    name: elasticsearch
    state: stopped
  ignore_errors: yes

- name: Generate CA private key
  command: openssl genrsa -out /etc/elasticsearch/certs/ca.key 4096
  args:
    creates: /etc/elasticsearch/certs/ca.key

- name: Generate CA certificate
  command: openssl req -x509 -new -nodes -key /etc/elasticsearch/certs/ca.key -sha256 -days 3650 -subj "/CN=EDR-CA" -out /etc/elasticsearch/certs/ca.crt
  args:
    creates: /etc/elasticsearch/certs/ca.crt

- name: Generate Elasticsearch private key
  command: openssl genrsa -out /etc/elasticsearch/certs/elasticsearch.key 4096
  args:
    creates: /etc/elasticsearch/certs/elasticsearch.key

- name: Generate Elasticsearch CSR
  command: openssl req -new -key /etc/elasticsearch/certs/elasticsearch.key -subj "/CN={{ ansible_fqdn | default(ansible_hostname) }}" -out /etc/elasticsearch/certs/elasticsearch.csr
  args:
    creates: /etc/elasticsearch/certs/elasticsearch.csr

- name: Sign Elasticsearch certificate with CA
  command: openssl x509 -req -in /etc/elasticsearch/certs/elasticsearch.csr -CA /etc/elasticsearch/certs/ca.crt -CAkey /etc/elasticsearch/certs/ca.key -CAcreateserial -out /etc/elasticsearch/certs/elasticsearch.crt -days 365 -sha256
  args:
    creates: /etc/elasticsearch/certs/elasticsearch.crt

- name: Set permissions on certs
  file:
    path: /etc/elasticsearch/certs
    owner: root
    group: elasticsearch
    mode: 0750
    recurse: yes

- name: Configure Elasticsearch
  template:
    src: elasticsearch.yml.j2
    dest: /etc/elasticsearch/elasticsearch.yml
    owner: root
    group: elasticsearch
    mode: 0660
  notify: restart elasticsearch

- name: Start and enable service
  systemd:
    name: elasticsearch
    state: started
    enabled: yes
  register: elasticsearch_start_result
  failed_when: false

- name: Check Elasticsearch status if startup failed
  shell: systemctl status elasticsearch
  register: elasticsearch_status_output
  when: elasticsearch_start_result is failed
  failed_when: false

- name: Display Elasticsearch status if failed
  debug:
    msg: "{{ elasticsearch_status_output.stdout_lines }}"
  when: elasticsearch_start_result is failed

- name: Check Elasticsearch logs if startup failed
  shell: journalctl -xeu elasticsearch.service --no-pager | tail -20
  register: elasticsearch_logs_output
  when: elasticsearch_start_result is failed
  failed_when: false

- name: Display Elasticsearch logs if failed
  debug:
    msg: "{{ elasticsearch_logs_output.stdout_lines }}"
  when: elasticsearch_start_result is failed

- name: Fail with clear error message
  fail:
    msg: "Elasticsearch failed to start. Check the logs above for the specific error."
  when: elasticsearch_start_result is failed

- name: Wait for Elasticsearch to be ready
  uri:
    url: "https://localhost:9200"
    method: GET
    validate_certs: no
    status_code: 200
  register: elasticsearch_health
  until: elasticsearch_health.status == 200
  retries: 30
  delay: 10
  ignore_errors: yes

- name: Verify Elasticsearch is running
  systemd:
    name: elasticsearch
    state: started
  register: elasticsearch_status

- name: Fail if Elasticsearch is not running
  fail:
    msg: "Elasticsearch failed to start. Check logs with: sudo journalctl -xeu elasticsearch.service"
  when: elasticsearch_status.status.ActiveState != "active"

- name: Set elastic user password
  command: /usr/share/elasticsearch/bin/elasticsearch-reset-password -u elastic -b -i --password "{{ elastic_password }}"
  become: yes
  become_user: elasticsearch
  register: reset_password_output
  changed_when: "Password for the [elastic] user successfully reset" in reset_password_output.stdout
  when: elasticsearch_start_result is not failed

- name: Print Elasticsearch credentials
  debug:
    msg: |
      Elasticsearch is ready!
      Username: elastic
      Password: {{ elastic_password }}
  when: elasticsearch_start_result is not failed 