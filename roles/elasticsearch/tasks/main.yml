---
- name: Verify system requirements
  assert:
    that:
      - ansible_memtotal_mb > 2000
      - ansible_processor_vcpus > 1
    msg: "System doesn't meet minimum requirements (2GB RAM, 2 CPUs)"

- name: Install prerequisites
  apt:
    name: [openjdk-17-jdk, apt-transport-https, openssl]
    state: present
    update_cache: yes

- name: Configure system limits
  sysctl:
    name: vm.max_map_count
    value: '262144'
    state: present
    reload: yes

- name: Ensure keyrings directory exists
  file:
    path: /etc/apt/keyrings
    state: directory
    mode: 0755

- name: Download Elastic GPG key (ASCII)
  get_url:
    url: https://artifacts.elastic.co/GPG-KEY-elasticsearch
    dest: /etc/apt/keyrings/elastic.asc
    mode: '0644'

- name: Convert Elastic GPG key to binary format
  command: gpg --dearmor -o /etc/apt/keyrings/elastic.gpg /etc/apt/keyrings/elastic.asc
  args:
    creates: /etc/apt/keyrings/elastic.gpg

- name: Add Elastic repository (new keyring method)
  apt_repository:
    repo: "deb [signed-by=/etc/apt/keyrings/elastic.gpg] https://artifacts.elastic.co/packages/8.x/apt stable main"
    state: present
    filename: elastic-8.x

- name: Install Elasticsearch
  apt:
    name: elasticsearch
    state: present
    update_cache: yes

- name: Create essential directories
  file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
  loop:
    - { path: "/etc/elasticsearch", owner: "root", group: "elasticsearch", mode: "0775" }
    - { path: "/etc/elasticsearch/certs", owner: "root", group: "elasticsearch", mode: "0750" }
    - { path: "/var/log/elasticsearch", owner: "elasticsearch", group: "elasticsearch", mode: "0755" }
    - { path: "/var/lib/elasticsearch", owner: "elasticsearch", group: "elasticsearch", mode: "0755" }
    - { path: "/tmp/elasticsearch", owner: "elasticsearch", group: "elasticsearch", mode: "1777" }

- name: Configure log4j2
  copy:
    dest: /etc/elasticsearch/log4j2.properties
    content: |
      status = error
      appender.console.type = Console
      appender.console.name = console
      appender.console.layout.type = PatternLayout
      appender.console.layout.pattern = [%d{ISO8601}] [%t] %-5p %c %marker - %m%n
      rootLogger.level = info
      rootLogger.appenderRef.console.ref = console
    owner: root
    group: elasticsearch
    mode: '0660'

- name: Configure JVM options
  copy:
    dest: /etc/elasticsearch/jvm.options
    content: |
      -Xms1g
      -Xmx1g
      -XX:+UseG1GC
      -XX:MaxGCPauseMillis=50
      -XX:+HeapDumpOnOutOfMemoryError
      -XX:HeapDumpPath=/var/lib/elasticsearch
      -XX:ErrorFile=/var/log/elasticsearch/hs_err_pid%p.log
    owner: root
    group: elasticsearch
    mode: '0660'

- name: Generate CA private key
  command: openssl genrsa -out /etc/elasticsearch/certs/ca.key 4096
  args:
    creates: /etc/elasticsearch/certs/ca.key

- name: Generate CA certificate
  command: openssl req -x509 -new -nodes -key /etc/elasticsearch/certs/ca.key -sha256 -days 3650 -subj "/CN=EDR-CA" -out /etc/elasticsearch/certs/ca.crt
  args:
    creates: /etc/elasticsearch/certs/ca.crt

- name: Generate Elasticsearch private key
  command: openssl genrsa -out /etc/elasticsearch/certs/elasticsearch.key 4096
  args:
    creates: /etc/elasticsearch/certs/elasticsearch.key

- name: Generate Elasticsearch CSR
  command: openssl req -new -key /etc/elasticsearch/certs/elasticsearch.key -subj "/CN={{ ansible_fqdn | default(ansible_hostname) }}" -out /etc/elasticsearch/certs/elasticsearch.csr
  args:
    creates: /etc/elasticsearch/certs/elasticsearch.csr

- name: Sign Elasticsearch certificate with CA
  command: openssl x509 -req -in /etc/elasticsearch/certs/elasticsearch.csr -CA /etc/elasticsearch/certs/ca.crt -CAkey /etc/elasticsearch/certs/ca.key -CAcreateserial -out /etc/elasticsearch/certs/elasticsearch.crt -days 365 -sha256
  args:
    creates: /etc/elasticsearch/certs/elasticsearch.crt

- name: Set permissions on certs
  file:
    path: /etc/elasticsearch/certs
    owner: root
    group: elasticsearch
    mode: 0750
    recurse: yes

- name: Configure Elasticsearch
  template:
    src: elasticsearch.yml.j2
    dest: /etc/elasticsearch/elasticsearch.yml
    owner: root
    group: elasticsearch
    mode: '0660'
  notify: restart elasticsearch

- name: Start Elasticsearch service
  systemd:
    name: elasticsearch
    state: started
    enabled: yes
  register: es_start
  retries: 3
  delay: 10

- name: Verify Elasticsearch is running
  command: curl -s http://localhost:9200
  register: es_verify
  until: '"number" in es_verify.stdout'
  retries: 12
  delay: 10
  ignore_errors: yes

- name: Set up passwords if needed
  block:
    - name: Check if passwords already set
      stat:
        path: /etc/elasticsearch/.passwords_set
      register: passwords_set

    - name: Run elasticsearch-setup-passwords
      command: /usr/share/elasticsearch/bin/elasticsearch-setup-passwords auto -b
      when: not passwords_set.stat.exists
      register: setup_passwords
      changed_when: "'Changed' in setup_passwords.stdout"

    - name: Create password set flag
      file:
        path: /etc/elasticsearch/.passwords_set
        state: touch
        mode: '0640'
        owner: root
        group: elasticsearch
      when: not passwords_set.stat.exists
  rescue:
    - name: Warn about password setup failure
      debug:
        msg: "Password setup failed. Run manually: /usr/share/elasticsearch/bin/elasticsearch-setup-passwords auto"

- name: Print final instructions for credentials
  debug:
    msg: |
      âœ… EDR Backend deployment complete!
      
      To generate or reset your login credentials for Elasticsearch, Kibana, and TheHive, run:
        sudo ./generate-edr-credentials.sh
      
      Your credentials will be printed and saved to /etc/elasticsearch/edr-credentials.txt
      
      Access your services:
        - Elasticsearch: https://localhost:9200
        - Kibana:       https://localhost:5601
        - TheHive:      https://localhost:9000
      
      For more help, see the README or contact your administrator. 