---
- name: Install Kibana
  apt:
    name: kibana
    state: present
    update_cache: yes

- name: Create Kibana directories
  file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
  loop:
    - { path: "/etc/kibana/certs", owner: "root", group: "kibana", mode: "0750" }
    - { path: "/var/log/kibana", owner: "kibana", group: "kibana", mode: "0755" }
    - { path: "/usr/share/kibana/data", owner: "kibana", group: "kibana", mode: "0755" }

- name: Copy CA cert from Elasticsearch
  copy:
    src: /etc/elasticsearch/certs/ca.crt
    dest: /etc/kibana/certs/ca.crt
    remote_src: yes
    owner: root
    group: kibana
    mode: 0644

- name: Generate Kibana SSL certificates
  block:
    - name: Generate Kibana private key
      command: openssl genrsa -out /etc/kibana/certs/kibana.key 4096
      args:
        creates: /etc/kibana/certs/kibana.key

    - name: Generate Kibana CSR
      command: openssl req -new -key /etc/kibana/certs/kibana.key -subj "/CN={{ ansible_fqdn | default(ansible_hostname) }}" -out /etc/kibana/certs/kibana.csr
      args:
        creates: /etc/kibana/certs/kibana.csr

    - name: Sign Kibana certificate with CA
      command: >
        openssl x509 -req -in /etc/kibana/certs/kibana.csr \
        -CA /etc/kibana/certs/ca.crt \
        -CAkey /etc/elasticsearch/certs/ca.key \
        -CAcreateserial \
        -out /etc/kibana/certs/kibana.crt \
        -days 365 -sha256
      args:
        creates: /etc/kibana/certs/kibana.crt

    - name: Create PKCS12 keystore for Kibana
      command: >
        openssl pkcs12 -export \
        -in /etc/kibana/certs/kibana.crt \
        -inkey /etc/kibana/certs/kibana.key \
        -out /etc/kibana/certs/kibana.p12 \
        -passout pass:changeit
      args:
        creates: /etc/kibana/certs/kibana.p12

    - name: Set certificate permissions
      file:
        path: /etc/kibana/certs
        owner: root
        group: kibana
        mode: 0750
        recurse: yes
  rescue:
    - name: Clean up failed certificate generation
      file:
        path: /etc/kibana/certs
        state: absent
      ignore_errors: yes

    - name: Fail with certificate error
      fail:
        msg: "Failed to generate SSL certificates for Kibana. Check if openssl is properly installed."

- name: Configure Kibana
  template:
    src: kibana.yml.j2
    dest: /etc/kibana/kibana.yml
    owner: root
    group: kibana
    mode: 0660
  notify: restart kibana

- name: Reset elastic user password
  command: /usr/share/elasticsearch/bin/elasticsearch-reset-password -u elastic --batch
  register: elastic_reset
  become: yes

- name: Extract elastic password from output
  set_fact:
    elastic_password: "{{ elastic_reset.stdout | regex_search('New value for password of user \\[elastic\\] is: (.+)', '\\1') }}"

- name: Ensure Kibana can connect to Elasticsearch
  uri:
    url: "https://localhost:9200"
    method: GET
    validate_certs: no
    status_code: 200
    user: "elastic"
    password: "{{ elastic_password }}"
  register: es_check
  until: es_check.status == 200
  retries: 12
  delay: 10
  ignore_errors: yes

- name: Show elastic password
  debug:
    msg: |
      âœ… All services deployed!
      
      Your elastic user password is: {{ elastic_password }}
      
      Please save this password securely. If you need to reset credentials, re-run the playbook. 