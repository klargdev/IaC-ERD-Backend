---
- name: Install Kibana
  apt:
    name: kibana
    state: present
    update_cache: yes

- name: Create Kibana directories
  file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
  loop:
    - { path: "/etc/kibana/certs", owner: "root", group: "kibana", mode: "0750" }
    - { path: "/var/log/kibana", owner: "kibana", group: "kibana", mode: "0755" }
    - { path: "/usr/share/kibana/data", owner: "kibana", group: "kibana", mode: "0755" }

- name: Copy CA cert from Elasticsearch
  copy:
    src: /etc/elasticsearch/certs/ca.crt
    dest: /etc/kibana/certs/ca.crt
    remote_src: yes
    owner: root
    group: kibana
    mode: 0644

- name: Generate Kibana SSL certificates
  block:
    - name: Generate Kibana private key
      command: openssl genrsa -out /etc/kibana/certs/kibana.key 4096
      args:
        creates: /etc/kibana/certs/kibana.key

    - name: Generate Kibana CSR
      command: openssl req -new -key /etc/kibana/certs/kibana.key -subj "/CN={{ ansible_fqdn | default(ansible_hostname) }}" -out /etc/kibana/certs/kibana.csr
      args:
        creates: /etc/kibana/certs/kibana.csr

    - name: Sign Kibana certificate with CA
      command: >
        openssl x509 -req -in /etc/kibana/certs/kibana.csr \
        -CA /etc/kibana/certs/ca.crt \
        -CAkey /etc/elasticsearch/certs/ca.key \
        -CAcreateserial \
        -out /etc/kibana/certs/kibana.crt \
        -days 365 -sha256
      args:
        creates: /etc/kibana/certs/kibana.crt

    - name: Create PKCS12 keystore for Kibana
      command: >
        openssl pkcs12 -export \
        -in /etc/kibana/certs/kibana.crt \
        -inkey /etc/kibana/certs/kibana.key \
        -out /etc/kibana/certs/kibana.p12 \
        -passout pass:changeit
      args:
        creates: /etc/kibana/certs/kibana.p12

    - name: Set certificate permissions
      file:
        path: /etc/kibana/certs
        owner: root
        group: kibana
        mode: 0750
        recurse: yes
  rescue:
    - name: Clean up failed certificate generation
      file:
        path: /etc/kibana/certs
        state: absent
      ignore_errors: yes

    - name: Fail with certificate error
      fail:
        msg: "Failed to generate SSL certificates for Kibana. Check if openssl is properly installed."

- name: Debug elastic_password
  debug:
    var: elastic_password

- name: Fail if elastic_password is not defined
  fail:
    msg: "The variable 'elastic_password' is not defined. Please run the playbook from site.yml and provide the password at the prompt."
  when: elastic_password is not defined

- name: Configure Kibana
  template:
    src: kibana.yml.j2
    dest: /etc/kibana/kibana.yml
    owner: root
    group: kibana
    mode: 0660
  notify: restart kibana

- name: Pause for manual password reset
  pause:
    prompt: |
      ⏰ Please run the following command manually:
      
      sudo /usr/share/elasticsearch/bin/elasticsearch-reset-password -u elastic
      
      Copy the generated password, then press Enter to continue.
      
      The playbook will wait for 2 minutes...
  timeout: 120

- name: Restart Kibana to apply new password configuration
  systemd:
    name: kibana
    state: restarted
  notify: restart kibana

- name: Ensure Kibana can connect to Elasticsearch
  uri:
    url: "https://localhost:9200"
    method: GET
    validate_certs: no
    status_code: 200
    user: "elastic"
    password: "{{ elastic_password }}"
  register: es_check
  until: es_check.status == 200
  retries: 12
  delay: 10
  ignore_errors: yes

- name: Start and enable Kibana service
  block:
    - name: Stop Kibana if running
      systemd:
        name: kibana
        state: stopped
      ignore_errors: yes

    - name: Reload systemd
      command: systemctl daemon-reload

    - name: Start and enable Kibana
      systemd:
        name: kibana
        state: started
        enabled: yes
      register: kibana_start
      retries: 3
      delay: 10

    - name: Wait for Kibana to be ready
      uri:
        url: "http://localhost:5601/api/status"
        method: GET
        status_code: 200
        timeout: 30
      register: kibana_health
      until: kibana_health.status == 200
      retries: 12
      delay: 10
      ignore_errors: yes

  rescue:
    - name: Collect service status
      command: systemctl status kibana --no-pager
      register: kibana_status
      changed_when: false

    - name: Collect service logs
      command: journalctl -u kibana -n 50 --no-pager
      register: kibana_logs
      changed_when: false

    - name: Display error information
      debug:
        msg: |
          Kibana failed to start!
          Status:
          {{ kibana_status.stdout }}
          
          Last logs:
          {{ kibana_logs.stdout }}

          Common fixes:
          1. Verify Elasticsearch is running: curl -k https://localhost:9200
          2. Check /etc/kibana/kibana.yml configuration
          3. Verify certificates in /etc/kibana/certs
          4. Check disk space (df -h) and memory (free -h)

    - name: Fail with detailed message
      fail:
        msg: "Kibana failed to start after multiple attempts. See debug output above." 

- name: Show elastic password
  debug:
    msg: |
      ✅ All services deployed!
      
      Your elastic user password is: {{ elastic_password }}
      
      Please save this password securely. If you need to reset credentials, re-run the playbook. 